import { GitlabMergeuserInterface } from './gitlab.mergeuser.interface';
import { GitlabMilestoneInterface } from './gitlab.milestone.interface';
import { GitlabReferencesInterface } from './gitlab.references.interface';
import { GitlabTimestatsInterface } from './gitlab.timestats.interface';
import { GitlabTaskcompletionstatusInterface } from './gitlab.taskcompletionstatus.interface';
import { GitlabMergestatusType } from '../types/gitlab.mergestatus.type';

export interface GitlabMergereqeustInterface {
  id: number;
  iid: number;
  project_id: number;
  title: string;
  description: string;
  state: string;
  merge_user: GitlabMergeuserInterface;
  merged_at: string;
  prepared_at: string;
  closed_by: GitlabMergeuserInterface;
  closed_at: string;
  target_branch: string;
  source_branch: string;
  upvotes: number;
  downvotes: number;
  author: GitlabMergeuserInterface;
  assignee: GitlabMergeuserInterface;
  assignees: GitlabMergeuserInterface[];
  reviewers: GitlabMergeuserInterface[];
  source_project_id: number;
  target_project_id: number;
  labels: string[];
  draft: boolean;
  work_in_progress: boolean;
  milestone: GitlabMilestoneInterface;
  merge_when_pipeline_succeeds: boolean;
  merge_status: string;
  detailed_merge_status: GitlabMergestatusType;
  sha: string;
  merge_commit_sha: string;
  user_notes_count: number;
  discussion_locked: boolean;
  should_remove_source_branch: boolean;
  force_remove_source_branch: boolean;
  allow_collaboration: boolean;
  allow_maintainer_to_push: boolean;
  web_url: string;
  references: GitlabReferencesInterface;
  time_stats: GitlabTimestatsInterface;
  squash: boolean;
  task_completion_status: GitlabTaskcompletionstatusInterface;
}
